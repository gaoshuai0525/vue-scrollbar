{"version":3,"file":"vue-scrollbar.min.js","sources":["../src/components/scrollbar.vue"],"sourcesContent":["<template>\n    <div class=\"scrollbar\">\n        <div class=\"wrap\" ref=\"wrap\" @scroll=\"handleScroll\" @mousedown=\"clickTrackHandler($event)\">\n            <slot></slot>\n        </div>\n        <div class=\"scrollbar_bar\" ref=\"bar\" @mousedown=\"clickTrackHandler($event)\">\n            <div :style=renderStyle() @mousedown=\"clickThumbHandler($event)\" class=\"scrollbar__thumb\"></div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        data () {\n            return {\n                sizeHeight:'0',\n                move: '0',\n                axis: null\n            }\n        },\n        computed: {\n            wrap() {\n                return this.$refs.wrap;\n            }\n        },\n        created () {\n        },\n        mounted () {\n            this.update();\n            this.wrap.addEventListener('DOMNodeInserted', this.update, false)\n            this.wrap.addEventListener('DOMNodeRemoved', this.update, false)\n        },\n        watch: {\n        },\n        methods: {\n            clickThumbHandler(e) {\n                this.axis = e.y - e.currentTarget.getBoundingClientRect().top;\n                this.startDrag(e)\n            },\n            clickTrackHandler(e) {\n                this.axis = e.currentTarget.firstChild.getBoundingClientRect().height/2;\n                this.mouseMoveDocumentHandler(e)\n            },\n            startDrag(e) {\n                var vm = this;\n                e.stopPropagation();\n                e.preventDefault();\n                e.cancelBubble=true;\n                document.addEventListener('mousemove', vm.mouseMoveDocumentHandler, false);\n                document.addEventListener('mouseup', function () {\n                    document.removeEventListener('mousemove', vm.mouseMoveDocumentHandler, false)\n                }, false);\n            },\n            mouseMoveDocumentHandler(e){\n                var wrap = this.wrap;\n                var barOffset = this.$refs.bar.getBoundingClientRect();\n                this.move = (e.y - barOffset.top - this.axis) / this.$refs.bar.firstChild.getBoundingClientRect().height * 100;\n                wrap.scrollTop = this.move * wrap.clientHeight / 100;\n                this.move = Math.min(this.move,(wrap.scrollHeight - wrap.clientHeight)*100/ wrap.clientHeight);\n                this.move = Math.max(0,this.move);\n            },\n            handleScroll() {\n                var wrap = this.wrap;\n                this.move = ((wrap.scrollTop * 100) / wrap.clientHeight);\n            },\n            update() {\n                this.$nextTick(()=>{\n                    let heightPercentage;\n                    var wrap = this.wrap;\n                    heightPercentage = (wrap.clientHeight * 100 / wrap.scrollHeight);\n                    this.sizeHeight = (heightPercentage < 100) ? (heightPercentage + '%') : '';\n                })\n            },\n            renderStyle() {\n                return {\n                    height: this.sizeHeight,\n                    transform: 'translateY('+this.move+'%)'}\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .scrollbar{\n        height: 100%;\n        overflow: hidden;\n\n    }\n    .wrap{\n        height: 100%;\n        overflow-y: scroll;\n        margin-right: -20px;\n        margin-bottom: -20px;\n\n    }\n    .scrollbar_bar{\n        position: absolute;\n        width: 6px;\n        top: 2px;\n        right: 2px;\n        bottom: 2px;\n        z-index: 1;\n        border-radius: 4px;\n        opacity: 0;\n        transition: opacity .12s ease-out;\n    }\n    .scrollbar:hover .scrollbar_bar{\n        opacity: 1;\n        transition: opacity 340ms ease-out;\n    }\n    .scrollbar__thumb{\n        transition: background-color .3s;\n        background-color: hsla(220,4%,58%,.3);\n    }\n</style>\n"],"names":["data","sizeHeight","move","axis","computed","wrap","this","$refs","created","mounted","update","addEventListener","watch","methods","clickThumbHandler","e","y","currentTarget","getBoundingClientRect","top","startDrag","clickTrackHandler","firstChild","height","mouseMoveDocumentHandler","vm","stopPropagation","preventDefault","cancelBubble","document","removeEventListener","barOffset","bar","scrollTop","clientHeight","Math","min","scrollHeight","max","handleScroll","$nextTick","let","heightPercentage","renderStyle","transform"],"mappings":"cAAA,kzBAAA,GAYA,4XACIA,gBACI,OACIC,WAAW,IACXC,KAAM,IACNC,KAAM,OAGdC,UACIC,gBACI,OAAOC,KAAKC,MAAMF,OAG1BG,qBAEAC,mBACIH,KAAKI,SACLJ,KAAKD,KAAKM,iBAAiB,kBAAmBL,KAAKI,QAAQ,GAC3DJ,KAAKD,KAAKM,iBAAiB,iBAAkBL,KAAKI,QAAQ,IAE9DE,SAEAC,SACIC,2BAAkBC,GACdT,KAAKH,KAAOY,EAAEC,EAAID,EAAEE,cAAcC,wBAAwBC,IAC1Db,KAAKc,UAAUL,IAEnBM,2BAAkBN,GACdT,KAAKH,KAAOY,EAAEE,cAAcK,WAAWJ,wBAAwBK,OAAO,EACtEjB,KAAKkB,yBAAyBT,IAElCK,mBAAUL,GACN,IAAIU,EAAKnB,KACTS,EAAEW,kBACFX,EAAEY,iBACFZ,EAAEa,cAAa,EACfC,SAASlB,iBAAiB,YAAac,EAAGD,0BAA0B,GACpEK,SAASlB,iBAAiB,UAAW,WACjCkB,SAASC,oBAAoB,YAAaL,EAAGD,0BAA0B,KACxE,IAEPA,kCAAyBT,GACrB,IAAIV,EAAOC,KAAKD,KACZ0B,EAAYzB,KAAKC,MAAMyB,IAAId,wBAC/BZ,KAAKJ,MAAQa,EAAEC,EAAIe,EAAUZ,IAAMb,KAAKH,MAAQG,KAAKC,MAAMyB,IAAIV,WAAWJ,wBAAwBK,OAAS,IAC3GlB,EAAK4B,UAAY3B,KAAKJ,KAAOG,EAAK6B,aAAe,IACjD5B,KAAKJ,KAAOiC,KAAKC,IAAI9B,KAAKJ,KAA6C,KAAvCG,EAAKgC,aAAehC,EAAK6B,cAAmB7B,EAAK6B,cACjF5B,KAAKJ,KAAOiC,KAAKG,IAAI,EAAEhC,KAAKJ,OAEhCqC,wBACI,IAAIlC,EAAOC,KAAKD,KAChBC,KAAKJ,KAA0B,IAAjBG,EAAK4B,UAAmB5B,EAAK6B,cAE/CxB,6BACIJ,KAAKkC,qBACDC,IAAIC,EACArC,EAAOC,EAAKD,KAChBqC,EAAwC,IAApBrC,EAAK6B,aAAqB7B,EAAKgC,aACnD/B,EAAKL,WAAcyC,EAAmB,IAAQA,EAAmB,IAAO,MAGhFC,uBACI,OACIpB,OAAQjB,KAAKL,WACb2C,UAAW,cAActC,KAAKJ,KAAK"}